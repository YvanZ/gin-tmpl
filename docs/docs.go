// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2021-05-03 14:33:16.605683 +0800 CST m=+0.065742923

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/demo/test": {
            "get": {
                "description": "获取所有数据",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Demo"
                ],
                "summary": "获取所有数据",
                "parameters": [
                    {
                        "type": "string",
                        "description": "条件查询，如a=xxx,xxx;b=xxx;c=xxxx",
                        "name": "in",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "分页页码",
                        "name": "pagenum",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "分页数据行数",
                        "name": "pagesize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "关键字查询",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "查询字段，配合关键字在某一个字段中查询",
                        "name": "column",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "排序字段",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "升序:asc,降序:desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "500": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "新增数据",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Demo"
                ],
                "summary": "新增数据",
                "parameters": [
                    {
                        "description": "demo",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/srvdemo.AddParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "500": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/demo/test/message": {
            "post": {
                "description": "发送消息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Demo"
                ],
                "summary": "发送消息",
                "parameters": [
                    {
                        "description": "demo",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/srvdemo.AddParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "500": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/demo/test/{ids}": {
            "delete": {
                "description": "删除数据",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Demo"
                ],
                "summary": "删除数据",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ids",
                        "name": "ids",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "500": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/demo/test/{id}": {
            "get": {
                "description": "获取详情",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Demo"
                ],
                "summary": "获取指定ID详情",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "500": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "更新数据",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Demo"
                ],
                "summary": "更新数据",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "IDC detail",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/srvdemo.AddParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "500": {
                        "description": "结果：{ret_code:code,data:数据,message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.Response": {
            "type": "object",
            "properties": {
                "data_set": {
                    "type": "object"
                },
                "message": {
                    "type": "string"
                },
                "ret_code": {
                    "type": "integer"
                }
            }
        },
        "srvdemo.AddParams": {
            "type": "object",
            "required": [
                "user_name"
            ],
            "properties": {
                "user_name": {
                    "description": "名字",
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/api/v1/",
	Schemes:     []string{},
	Title:       "Demo app",
	Description: "gin demo",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
